from ROOT import *
import numpy as n

DEBUG = 0

class GenTools:

   def __init__(self):
       self.totevs = n.zeros(1, dtype=float)
       self.gen1_pt = n.zeros(1, dtype=float)
       self.gen2_pt = n.zeros(1, dtype=float)
       self.gen3_pt = n.zeros(1, dtype=float)
       self.gen4_pt = n.zeros(1, dtype=float)
       self.gen1_eta = n.zeros(1, dtype=float)
       self.gen2_eta = n.zeros(1, dtype=float)
       self.gen3_eta = n.zeros(1, dtype=float)
       self.gen4_eta = n.zeros(1, dtype=float)
       self.gen1_phi = n.zeros(1, dtype=float)
       self.gen2_phi = n.zeros(1, dtype=float)
       self.gen3_phi = n.zeros(1, dtype=float)
       self.gen4_phi = n.zeros(1, dtype=float)
       self.gen1_energy = n.zeros(1, dtype=float)
       self.gen2_energy = n.zeros(1, dtype=float)
       self.gen3_energy = n.zeros(1, dtype=float)
       self.gen4_energy = n.zeros(1, dtype=float)
       self.gen12_mass = n.zeros(1, dtype=float)
       self.gen13_mass = n.zeros(1, dtype=float)
       self.gen14_mass = n.zeros(1, dtype=float)
       self.gen23_mass = n.zeros(1, dtype=float)
       self.gen24_mass = n.zeros(1, dtype=float)
       self.gen34_mass = n.zeros(1, dtype=float)
       self.gen12dr = n.zeros(1, dtype=float)
       self.gen13dr = n.zeros(1, dtype=float)
       self.gen14dr = n.zeros(1, dtype=float)
       self.gen23dr = n.zeros(1, dtype=float)
       self.gen24dr = n.zeros(1, dtype=float)
       self.gen34dr = n.zeros(1, dtype=float)
       self.gen_mindr = n.zeros(1, dtype=float)
       self.gen_maxdr = n.zeros(1, dtype=float)
       self.tp_mass = n.zeros(1, dtype=float)

       #
       self.p1_pt_case1 = n.zeros(1, dtype=float)
       self.p2_pt_case1 = n.zeros(1, dtype=float)
       self.p3_pt_case1 = n.zeros(1, dtype=float)
       self.p4_pt_case1 = n.zeros(1, dtype=float)
       self.p1_eta_case1 = n.zeros(1, dtype=float)
       self.p2_eta_case1 = n.zeros(1, dtype=float)
       self.p3_eta_case1 = n.zeros(1, dtype=float)
       self.p4_eta_case1 = n.zeros(1, dtype=float)
       self.p12_dr_case1 = n.zeros(1, dtype=float)
       self.p13_dr_case1 = n.zeros(1, dtype=float)
       self.p14_dr_case1 = n.zeros(1, dtype=float)
       self.p23_dr_case1 = n.zeros(1, dtype=float)
       self.p24_dr_case1 = n.zeros(1, dtype=float)
       self.p34_dr_case1 = n.zeros(1, dtype=float)
       self.p12_mass_case1 = n.zeros(1, dtype=float)
       self.p13_mass_case1 = n.zeros(1, dtype=float)
       self.p14_mass_case1 = n.zeros(1, dtype=float)
       self.p23_mass_case1 = n.zeros(1, dtype=float)
       self.p24_mass_case1 = n.zeros(1, dtype=float)
       self.p34_mass_case1 = n.zeros(1, dtype=float)
       self.tp_mass_case1 = n.zeros(1, dtype=float)
       self.Pho1out = n.zeros(1, dtype=float)
       self.Pho2out = n.zeros(1, dtype=float)
       self.Pho3out = n.zeros(1, dtype=float)
       self.Pho4out = n.zeros(1, dtype=float)

       self.fatpho_pt_case2 = n.zeros(1, dtype=float)
       self.isopho1_pt_case2 = n.zeros(1, dtype=float)
       self.isopho2_pt_case2 = n.zeros(1, dtype=float)
       self.fatpho_eta_case2 = n.zeros(1, dtype=float)
       self.isopho1_eta_case2 = n.zeros(1, dtype=float)
       self.isopho2_eta_case2 = n.zeros(1, dtype=float)
       self.fatpho_isopho1_dr_case2 = n.zeros(1, dtype=float)
       self.fatpho_isopho2_dr_case2 = n.zeros(1, dtype=float)
       self.isopho1_isopho2_dr_case2 = n.zeros(1, dtype=float)
       self.fatpho_mass_case2 = n.zeros(1, dtype=float)
       self.isopho12_mass_case2 = n.zeros(1, dtype=float)
       self.tp_mass_case2 = n.zeros(1, dtype=float)
       self.Fatphoout = n.zeros(1, dtype=float)
       self.Isopho1out = n.zeros(1, dtype=float)
       self.Isopho2out = n.zeros(1, dtype=float)
       #
       #
       self.fatpho1_pt_case3 = n.zeros(1, dtype=float)
       self.fatpho1_eta_case3 = n.zeros(1, dtype=float)
       self.fatpho2_pt_case3 = n.zeros(1, dtype=float)
       self.fatpho2_eta_case3 = n.zeros(1, dtype=float)
       self.fatpho1_fatpho2_dr_case3 = n.zeros(1, dtype=float)
       self.fatpho1_mass_case3 = n.zeros(1, dtype=float)
       self.fatpho2_mass_case3 = n.zeros(1, dtype=float)
       self.tp_mass_case3 = n.zeros(1, dtype=float)
       self.Fatpho1out = n.zeros(1, dtype=float)
       self.Fatpho2out = n.zeros(1, dtype=float)



   def MakeGenTree(self):
       outTree = TTree("geninfo","tot evs")
       SetOwnership(outTree,0)

       outTree.Branch('totevs',self.totevs,'totevs/D')
       outTree.Branch('gen1_pt',self.gen1_pt,'gen1_pt/D')
       outTree.Branch('gen2_pt',self.gen2_pt,'gen2_pt/D')
       outTree.Branch('gen3_pt',self.gen3_pt,'gen3_pt/D')
       outTree.Branch('gen4_pt',self.gen4_pt,'gen4_pt/D')
       outTree.Branch('gen1_eta',self.gen1_eta,'gen1_eta/D')
       outTree.Branch('gen2_eta',self.gen2_eta,'gen2_eta/D')
       outTree.Branch('gen3_eta',self.gen3_eta,'gen3_eta/D')
       outTree.Branch('gen4_eta',self.gen4_eta,'gen4_eta/D')
       outTree.Branch('gen1_phi',self.gen1_phi,'gen1_phi/D')
       outTree.Branch('gen2_phi',self.gen2_phi,'gen2_phi/D')
       outTree.Branch('gen3_phi',self.gen3_phi,'gen3_phi/D')
       outTree.Branch('gen4_phi',self.gen4_phi,'gen4_phi/D')
       outTree.Branch('gen1_energy',self.gen1_energy,'gen1_energy/D')
       outTree.Branch('gen2_energy',self.gen2_energy,'gen2_energy/D')
       outTree.Branch('gen3_energy',self.gen3_energy,'gen3_energy/D')
       outTree.Branch('gen4_energy',self.gen4_energy,'gen4_energy/D')
       outTree.Branch('gen12_mass',self.gen12_mass,'gen12_mass/D')
       outTree.Branch('gen13_mass',self.gen13_mass,'gen13_mass/D')
       outTree.Branch('gen14_mass',self.gen14_mass,'gen14_mass/D')
       outTree.Branch('gen23_mass',self.gen23_mass,'gen23_mass/D')
       outTree.Branch('gen24_mass',self.gen24_mass,'gen24_mass/D')
       outTree.Branch('gen34_mass',self.gen34_mass,'gen34_mass/D')
       outTree.Branch('gen12dr',self.gen12dr,'gen12dr/D')
       outTree.Branch('gen13dr',self.gen13dr,'gen13dr/D')
       outTree.Branch('gen14dr',self.gen14dr,'gen14dr/D')
       outTree.Branch('gen23dr',self.gen23dr,'gen23dr/D')
       outTree.Branch('gen24dr',self.gen24dr,'gen24dr/D')
       outTree.Branch('gen34dr',self.gen34dr,'gen34dr/D')
       outTree.Branch('gen_mindr',self.gen_mindr,'gen_mindr/D')
       outTree.Branch('gen_maxdr',self.gen_maxdr,'gen_maxdr/D')
       outTree.Branch('tp_mass',self.tp_mass,'tp_mass/D')

       return outTree

   def MakeGenTree_4resolved(self):
       outTree_case1 = TTree("H4GGen_4resolved", "4 resolved")
       SetOwnership(outTree_case1,0)

       outTree_case1.Branch('p1_pt_case1', self.p1_pt_case1, 'p1_pt_case1/D')
       outTree_case1.Branch('p2_pt_case1', self.p2_pt_case1, 'p2_pt_case1/D')
       outTree_case1.Branch('p3_pt_case1', self.p3_pt_case1, 'p3_pt_case1/D')
       outTree_case1.Branch('p4_pt_case1', self.p4_pt_case1, 'p4_pt_case1/D')
       outTree_case1.Branch('p1_eta_case1', self.p1_eta_case1, 'p1_eta_case1/D')
       outTree_case1.Branch('p2_eta_case1', self.p2_eta_case1, 'p2_eta_case1/D')
       outTree_case1.Branch('p3_eta_case1', self.p3_eta_case1, 'p3_eta_case1/D')
       outTree_case1.Branch('p4_eta_case1', self.p4_eta_case1, 'p4_eta_case1/D')
       outTree_case1.Branch('p12_dr_case1', self.p12_dr_case1,  'p12_dr_case1/D')
       outTree_case1.Branch('p13_dr_case1', self.p13_dr_case1,  'p13_dr_case1/D')
       outTree_case1.Branch('p14_dr_case1', self.p14_dr_case1,  'p14_dr_case1/D')
       outTree_case1.Branch('p23_dr_case1', self.p23_dr_case1,  'p23_dr_case1/D')
       outTree_case1.Branch('p24_dr_case1', self.p24_dr_case1,  'p24_dr_case1/D')
       outTree_case1.Branch('p34_dr_case1', self.p34_dr_case1,  'p34_dr_case1/D')
       outTree_case1.Branch('p12_mass_case1', self.p12_mass_case1,  'p12_mass_case1/D')
       outTree_case1.Branch('p13_mass_case1', self.p13_mass_case1,  'p13_mass_case1/D')
       outTree_case1.Branch('p14_mass_case1', self.p14_mass_case1,  'p14_mass_case1/D')
       outTree_case1.Branch('p23_mass_case1', self.p23_mass_case1,  'p23_mass_case1/D')
       outTree_case1.Branch('p24_mass_case1', self.p24_mass_case1,  'p24_mass_case1/D')
       outTree_case1.Branch('p34_mass_case1', self.p34_mass_case1,  'p34_mass_case1/D')
       outTree_case1.Branch('tp_mass_case1', self.tp_mass_case1, 'tp_mass_case1/D')
       outTree_case1.Branch('Pho1out',self.Pho1out,'Pho1out/D')
       outTree_case1.Branch('Pho2out',self.Pho2out,'Pho2out/D')
       outTree_case1.Branch('Pho3out',self.Pho3out,'Pho3out/D')
       outTree_case1.Branch('Pho4out',self.Pho4out,'Pho4out/D')

       return outTree_case1

   #
   #
   #
   def MakeGenTree_2res1fat(self):
       outTree_case2 = TTree("H4GGen_2res1fat", "1 fat + 2 resolved")
       SetOwnership(outTree_case2,0)

       outTree_case2.Branch('isopho1_pt_case2', self.isopho1_pt_case2, 'isopho1_pt_case2/D')
       outTree_case2.Branch('isopho2_pt_case2', self.isopho2_pt_case2, 'isopho2_pt_case2/D')
       outTree_case2.Branch('isopho1_eta_case2', self.isopho1_eta_case2, 'isopho1_eta_case2/D')
       outTree_case2.Branch('isopho2_eta_case2', self.isopho2_eta_case2, 'isopho2_eta_case2/D')
       outTree_case2.Branch('fatpho_pt_case2', self.fatpho_pt_case2, 'fatpho_pt_case2/D')
       outTree_case2.Branch('fatpho_eta_case2', self.fatpho_eta_case2, 'fatpho_eta_case2/D')
       outTree_case2.Branch('fatpho_isopho1_dr_case2',self.fatpho_isopho1_dr_case2,'fatpho_isopho1_dr_case2/D')
       outTree_case2.Branch('fatpho_isopho2_dr_case2',self.fatpho_isopho2_dr_case2,'fatpho_isopho2_dr_case2/D')
       outTree_case2.Branch('isopho1_isopho2_dr_case2',self.isopho1_isopho2_dr_case2,'isopho1_isopho2_dr_case2/D')
       outTree_case2.Branch('fatpho_mass_case2', self.fatpho_mass_case2, 'fatpho_mass_case2/D')
       outTree_case2.Branch('isopho12_mass_case2', self.isopho12_mass_case2, 'isopho12_mass_case2/D')
       outTree_case2.Branch('tp_mass_case2', self.tp_mass_case2, 'tp_mass_case2/D')
       outTree_case2.Branch('Fatphoout',self.Fatphoout,'Fatphoout/D')
       outTree_case2.Branch('Isopho1out',self.Isopho1out,'Isopho1out/D')
       outTree_case2.Branch('Isopho2out',self.Isopho2out,'Isopho2out/D')
       return outTree_case2


   def MakeGenTree_2fat(self):
       outTree_case3 = TTree("H4GGen_2fat", "2 fat")
       SetOwnership(outTree_case3,0)

       outTree_case3.Branch('fatpho1_pt_case3', self.fatpho1_pt_case3, 'fatpho1_pt_case3/D')
       outTree_case3.Branch('fatpho2_pt_case3', self.fatpho2_pt_case3, 'fatpho2_pt_case3/D')
       outTree_case3.Branch('fatpho1_eta_case3', self.fatpho1_eta_case3, 'fatpho1_eta_case3/D')
       outTree_case3.Branch('fatpho2_eta_case3', self.fatpho2_eta_case3, 'fatpho2_eta_case3/D')
       outTree_case3.Branch('fatpho1_fatpho2_dr_case3',self.fatpho1_fatpho2_dr_case3,'fatpho1_fatpho2_dr_case3/D')
       outTree_case3.Branch('fatpho1_mass_case3', self.fatpho1_mass_case3, 'fatpho1_mass_case3/D')
       outTree_case3.Branch('fatpho2_mass_case3', self.fatpho2_mass_case3, 'fatpho2_mass_case3/D')
       outTree_case3.Branch('tp_mass_case3', self.tp_mass_case3, 'tp_mass_case3/D')
       outTree_case3.Branch('Fatpho1out',self.Fatpho1out,'Fatpho1out/D')
       outTree_case3.Branch('Fatpho2out',self.Fatpho2out,'Fatpho2out/D')

       return outTree_case3
